// MIT License

// Copyright (c) 2020 The Ministry of Housing and Urban Affairs

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// v0.0.1

syntax = "proto3";
package ev_charging_realtime;
option java_package = "in.gov.mohua.ds.transit";

import "Header.proto";
import "BatteryType.proto";

message FeedMessage {
    // Metadata
    Header header = 1;

    // Information about the specific EV charging station. 
    repeated Station stations = 2;
}

message Station {

    message BatteryAvailability {
        BatteryType batteryType = 1;
        uint32 availableCount = 2;
    }

    message PodAvailability {
        enum PodType {
            POD_TYPE_UNKNOWN = 0;
            POD_TYPE_WIRED_CHARGING = 1;
            POD_TYPE_WIRELESS_CHARGING = 2;
            POD_TYPE_BATTERY_SWAPPING = 3;
        }

        PodType podType = 1;
        uint32 availableCount = 2;
    }

    message Transaction {
        message DurationOfService {
            uint64 startingTimeStamp = 1;
            uint64 endTimestamp = 2;
        }

        message ModeOfCharging {
            string unitType = 1;
            string podType = 2;
            string unitId = 3;
            string podId = 4;
        }

        message TransactionRate {
            float baseUnitPrice = 1;
            float surcharge = 2;
            float taxes = 3;
            float subsidy = 4;
            float pricePerUnit = 5;
        }

        string id = 1;
        uint64 timestamp = 2;
        float powerConsumption = 3;
        DurationOfService durationOfService =  4;
        ModeOfCharging modeOfCharging = 5;
        ModeOfPayment usedModeOfPayment = 6;
        
    }



    // Unique identification number assigned to the specific Station.
    string id  = 1;
    // General information about the specific EV charging station. 
    Info info = 2;
    // Information about the total vehicle capacity by type supported at the 
    // specific EV charging station.
    repeated VehicleCapacity vehicleCapacity = 3;
    // Location of the specific EV charging station.
    Location location = 4;
    // Operating schedule of the specific EV charging station.
    OperatingSchedule operatingSchedule = 5;
    // Status of operation of the specific EV charging station.
    Status status = 6;
    // Typology of vehicles allowed at the specific EV charging station.
    repeated VehicleType allowedVehicleType = 7;
    // Information about the specific charging unit. 
    repeated ChargingUnit chargingUnits = 8;
    // Information about the specific battery swapping unit. 
    repeated SwappingUnit swappingUnits = 9;
}